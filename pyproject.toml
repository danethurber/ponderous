[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ponderous"
version = "1.0.0"
description = "Thoughtful analysis of your MTG collection to discover buildable Commander decks"
readme = "README.md"
license = {text = "MIT"}
keywords = ["mtg", "magic-the-gathering", "commander", "edh", "collection", "deck-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment",
    "Topic :: Utilities",
]
requires-python = "~=3.11.0"
dependencies = [
    "click>=8.1.0",
    "dlt[duckdb]>=0.4.0",
    "duckdb>=0.9.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
]

# Modern dependency groups (uv 2025 best practice)
[dependency-groups]
test = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-asyncio>=0.24.0",
    "pytest-xdist>=3.6.0",
    "pytest-sugar>=1.0.0",
    "hypothesis>=6.112.0",
    "responses>=0.25.0",
    "freezegun>=1.5.0",
]
lint = [
    "black>=25.1.0",
    "ruff>=0.12.9",
    "mypy>=1.17.1",
]
dev = [
    "pre-commit>=4.3.0",
]

# Override global uv config to use only PyPI (no CodeArtifact)
[tool.uv]
index-url = "https://pypi.org/simple/"
extra-index-url = []  # Explicitly disable extra indexes

[project.scripts]
ponderous = "ponderous.cli:main"

[project.urls]
Homepage = "https://github.com/danethurber/ponderous"
Repository = "https://github.com/danethurber/ponderous"
Issues = "https://github.com/danethurber/ponderous/issues"
Documentation = "https://github.com/danethurber/ponderous"


# hatchling configuration
[tool.hatch.build.targets.wheel]
packages = ["src/ponderous"]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

# Ruff linting configuration
[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "ICN", # flake8-import-conventions
    "S",   # bandit security
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert detected
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "ARG001", "ARG002", "S105", "S106"]

# MyPy type checking configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dlt.*",
    "duckdb.*",
    "bs4.*",
    "responses.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=ponderous",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=95",
    "--tb=short",  # Better with pytest-sugar
    "--no-header", # Cleaner output with pytest-sugar
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

